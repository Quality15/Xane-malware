#include <Windows.h>

DWORD WINAPI effect1(LPVOID lpvd)
{
	HDC hdc = GetDC(0);
	int w = GetSystemMetrics(0);
	int h = GetSystemMetrics(1);
	HWND hwnd = GetDesktopWindow();
	RECT rect;
	while (true)
	{
		GetWindowRect(hwnd, &rect);
		int r = rand() % 2;
		if (r == 0) 
		{
			StretchBlt(hdc, 0, 0, rect.right, rect.bottom, hdc, 5, 5, rect.right - 10, rect.bottom - 10, SRCCOPY);
		}
		else if (r == 1)
		{
			StretchBlt(hdc, 5, 5, rect.right - 10, rect.bottom - 10, hdc, 0, 0, rect.right, rect.bottom, SRCINVERT);
		}
	}
}

DWORD WINAPI effect2(LPVOID lpvd)
{
	HDC hdc = GetDC(0);
	int w = GetSystemMetrics(0);
	int h = GetSystemMetrics(1);
	HWND hwnd = GetDesktopWindow();
	RECT rect;
	while (true)
	{
		GetWindowRect(hwnd, &rect);
		int r = rand() % h;
		int r2 = rand() % 2;
		if (r2 == 0)
		{
			BitBlt(hdc, 1, r, h, 66, hdc, 0, r, SRCCOPY);
		}
		else if (r2 == 1)
		{
			BitBlt(hdc, 0, r, h, 66, hdc, 1, r, SRCCOPY);
		}
	}
}

DWORD WINAPI effect3(LPVOID lpvd)
{
	HDC hdc = GetDC(0);
	int w = GetSystemMetrics(0);
	int h = GetSystemMetrics(1);
	while (true)
	{
		SelectObject(hdc, CreateSolidBrush(RGB(rand() % 75, rand() % 75, rand() % 75)));
		BitBlt(hdc, 0, 0, w, h, hdc, 0, 0, PATINVERT);
		Sleep(100);
	}
}

DWORD WINAPI effect4(LPVOID lpvd)
{
	HDC hdc = GetDC(0);
	int w = GetSystemMetrics(0);
	int h = GetSystemMetrics(1);
	while (true)
	{
		int x1 = (rand() % 400);
		int y1 = (rand() % 400);
		int x2 = (rand() % 400);
		int y2 = (rand() % 400);
		int width = (rand() % w);
		int height = (rand() % h);
		BitBlt(hdc, x1, y1, width, height, hdc, x2, y2, SRCCOPY);
	}
}

DWORD WINAPI sound_effect(LPVOID lpvd)
{
	while (true)
	{
		Beep(rand() % 2000, rand() % 700);
	}
}

DWORD WINAPI plg(LPVOID lpvd)
{
	HDC hWindow;
	HDC hDsktp;
	HWND hWnd;
	RECT wRect;
	int dx = 0, dy = 0, dW, dH;
	POINT wPt[3];
	int counter = 30;

	while (true)
	{
		hWnd = GetDesktopWindow();
		hWindow = GetWindowDC(hWnd);
		hDsktp = GetDC(0);
		GetWindowRect(hWnd, &wRect);

		dW = GetSystemMetrics(0);
		dH = GetSystemMetrics(1);

		wPt[0].x = wRect.left + counter;
		wPt[0].y = wRect.top - counter;
		wPt[1].x = wRect.right - counter;
		wPt[1].y = wRect.top + counter;
		wPt[2].x = wRect.left + counter;
		wPt[2].y = wRect.bottom + counter;

		PlgBlt(hDsktp, wPt, hDsktp, wRect.left, wRect.top, wRect.right - wRect.left, wRect.bottom - wRect.top, 0, 0, 0);
	}
}

int __stdcall WinMain(HINSTANCE(a), HINSTANCE(b), LPSTR(c), int(d))
{
	CreateThread(0, 0, effect1, 0, 0, 0);
	CreateThread(0, 0, effect2, 0, 0, 0);
	CreateThread(0, 0, effect3, 0, 0, 0);
	CreateThread(0, 0, effect4, 0, 0, 0);
	CreateThread(0, 0, plg, 0, 0, 0);
	CreateThread(0, 0, sound_effect, 0, 0, 0);
	while (1) {}
}